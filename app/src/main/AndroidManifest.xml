<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2015 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<manifest
    package="com.example.android.sampletvinput"
    xmlns:android="http://schemas.android.com/apk/res/android">

    <!-- Required to play internet-based streaming contents. -->
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- Required to update or read existing channel and program information in TvProvider. -->
    <uses-permission android:name="com.android.providers.tv.permission.READ_EPG_DATA" />

    <!-- Required to update channel and program information in TvProvider. -->
    <uses-permission android:name="com.android.providers.tv.permission.WRITE_EPG_DATA" />

    <!-- Required to sync EPG data after reboot. For details,
    please see {@link JobInfo.Builder#setPersisted}-->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>

    <uses-feature
        android:name="android.hardware.touchscreen"
        android:required="false" />
    <uses-feature
        android:name="android.software.leanback"
        android:required="true" />

    <!-- Required to expose this app in the store only when the device has TV input framework
    with the TV app. -->
    <uses-feature
        android:name="android.software.live_tv"
        android:required="true" />

    <!-- "android:restrictedAccountType" is required to make the sync adapter work in restricted
    profile mode. -->
    <application
        android:icon="@drawable/nejcz"
        android:label="@string/app_name"
        android:theme="@style/Theme.Leanback">
        <activity android:name=".MainActivity"
            android:icon="@drawable/nejcz"
            android:label="@string/app_name"
            android:logo="@drawable/nejcz"
            android:screenOrientation="landscape"
            android:theme="@style/Theme.Leanback.Browse">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LEANBACK_LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- Launched by the TV app before it uses RichTvInputService. This registers channels and
        sets up SyncJobService to provide program information in the background. -->
        <activity android:name=".rich.RichTvInputSetupActivity" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
            </intent-filter>
        </activity>

        <!-- A full-screen activity which will be launched by the TV app when a user clicks
        the app-link connected to this activity. -->
        <activity
            android:name=".rich.RichAppLinkDetailsActivity"
            android:theme="@style/Theme.Transparent">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
            </intent-filter>
        </activity>

        <!-- A side-panel activity which will be launched by the TV app when a user clicks
        the app-link connected to this activity. -->
        <activity
            android:name=".rich.RichAppLinkSidePanelActivity"
            android:theme="@style/Theme.Panel">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
            </intent-filter>
        </activity>

        <meta-data android:name="android.app.default_searchable"
            android:value="VideoDetailsActivity" />
        <activity
            android:name="VideoDetailsActivity"
            android:exported="true"
            android:theme="@style/Theme.Leanback.Details">

            <!-- Receives the search request. -->
            <intent-filter>
                <action android:name="android.intent.action.SEARCH" />
                <!-- No category needed, because the Intent will specify this class component -->
            </intent-filter>

            <!-- Points to searchable meta data. -->
            <meta-data
                android:name="android.app.searchable"
                android:resource="@xml/searchable" />
        </activity>

        <activity
            android:name="PlaybackOverlayActivity"
            android:configChanges="screenSize|smallestScreenSize|screenLayout|orientation|layoutDirection"
            android:launchMode="singleTask"
            android:resizeableActivity="true"
            android:supportsPictureInPicture="true" />
        <activity
            android:name="VerticalGridActivity"
            android:exported="true"
            android:parentActivityName="MainActivity"
            android:theme="@style/Theme.Leanback.VerticalGrid" />
        <activity android:name="SearchActivity" />
        <activity
            android:name="GuidedStepActivity"
            android:theme="@style/Theme.Example.Leanback.GuidedStep" />


        <activity android:name="OnboardingActivity"
            android:enabled="true"
            android:exported="true"
            android:theme="@style/Theme.Leanback.Onboarding" />

        <activity android:name="SettingsActivity"
            android:exported="true"
            android:theme="@style/LeanbackPreferences"
            />
        <activity
            android:name="AuthenticationActivity"
            android:theme="@style/Theme.Example.Leanback.GuidedStep" />


        <!-- TV input which provides channels based on the streaming contents.
        Requires "android.permission.BIND_TV_INPUT" to ensure that only system services can bind.
        This provides the full implementation of TvInputService including EPG, subtitles,
        multi-audio, parental controls, and overlay view.
        -->
        <service
            android:name=".rich.RichTvInputService"
            android:label="@string/rich_input_label"
            android:permission="android.permission.BIND_TV_INPUT">
            <!-- Required filter used by the system to launch our account service. -->
            <intent-filter>
                <action android:name="android.media.tv.TvInputService" />
            </intent-filter>
            <!-- An XML file which describes this input. This provides pointers to the
            RichTvInputSetupActivity to the system/TV app. -->
            <meta-data
                android:name="android.media.tv.input"
                android:resource="@xml/richtvinputservice" />
        </service>

        <!-- This service is for using JobScheduler to sync EPG data. -->
        <service
            android:name=".syncservice.SyncJobService"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:exported="true" />

        <service
            android:name=".data.FetchVideoService"
            android:exported="false" />
        <service
            android:name=".recommendation.UpdateRecommendationsService"
            android:enabled="true" />


        <!-- This receiver is for sync job schedule well after reboot. -->
        <receiver android:name=".rich.RichBootReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>

        <receiver
            android:name=".recommendation.RecommendationReceiver"
            android:enabled="true"
            android:exported="false">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>


        <!-- Provides search suggestions for keywords against video metadata. -->
        <provider
            android:name=".data.VideoProvider"
            android:authorities="${packageName}"
            android:exported="true">
            <path-permission
                android:pathPrefix="/search"
                android:readPermission="android.permission.GLOBAL_SEARCH" />
        </provider>


    </application>
</manifest>
